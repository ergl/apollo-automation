{run_template, "run.config.template"}.

%% Syntax for each experiment:
%% #{
%%     %% The name of the cluster configuration, always placed on the configuration/ folder
%%     config_file => "cluster.config",
%%     %% Number of threads per client machine.
%%     %% Allowed values are numbers (like `1`, `20`, etc), list of numbers,
%%     %% or a MFA ({M, F, A}) that in the end produces a generator of numbers
%%     %% For example, the line below produces the list [0, 50, 100]
%%     %% NOTE: The minimum number of workers is 1. All values less than 1 will be set to 1.
%%     clients => {lists, seq, [0, 100, 50]},
%%     %% The folder name under $HOME/results where all results for this test will go
%%     results_folder => "test_name",
%%     %% A map of template subsitutions.
%%     %% Check run.config.template for available values.
%%     %% In essence, anything present below will be changed in the corresponding
%%     %% run.config file supplied to the benchmark.
%%     %% Any key will be overriden, but the minimum amount of keys to be present
%%     is shown below.
%%     run_with => #{
%%         operations => [{read, 1}],
%%         readonly_ops => 1,
%%         retry_aborts => false
%%     }
%% }.

{experiments,
    [
        #{
            config_file => "cluster.config",
            clients => [300, 600],
            results_folder => "contention_basic_1M",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {pareto_int, 1000000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster.config",
            clients => [300, 600],
            results_folder => "uniform_200k",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {uniform_int, 200000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p2.config",
            clients => [300, 600],
            results_folder => "contention_basic_1M",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {pareto_int, 1000000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p2.config",
            clients => [300, 600],
            results_folder => "uniform_200k",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {uniform_int, 200000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p4.config",
            clients => [300, 600],
            results_folder => "contention_basic_1M",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {pareto_int, 1000000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p4.config",
            clients => [300, 600],
            results_folder => "uniform_200k",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {uniform_int, 200000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p6.config",
            clients => [400, 800],
            results_folder => "contention_basic_1M",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {pareto_int, 1000000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        },
        #{
            config_file => "cluster_p6.config",
            clients => [400, 800],
            results_folder => "uniform_200k",
            run_with => #{
                duration => 5,
                key_generator => {{int_to_bin_bigendian, 64}, {uniform_int, 200000}},
                operations => [{update,1}],
                writeonly_ops => 1,
                retry_aborts => false
            }
        }
    ]
}.
